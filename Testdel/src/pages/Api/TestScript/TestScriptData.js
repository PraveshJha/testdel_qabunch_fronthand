export var TestScriptData = {
    AllComponentList:[],
    ComponentName:'',
    IsErrorOnComponentName:false,
    IsValidComponentName:false,
    AllTestId:[],
    TestId:'',
    IsErrorOnTestId:false,
    IsValidTestId:false,
    TestName:'',
    IsErrorOnTestName:false,
    IsValidTestName:true,
    AllHttpMethodName:["Get","Post","Put","Delete","Head","Patch","Options"],
    HttpMethod:'Get',
    IsErrorOnHttpMethod:false,
    IsErrorOnNewTestId:false,
    NewTestId:'',
    IsValidNewTestId:true,
    IsRenameTestIdVisible:false,
    IsValidHttpMethod:true,
    AllEnvironmentList:[],
    SelectedEnvironmentName:'',
    IsErrorOnEnvironment:false,
    IsValidEnvironment:true,
    AllComponentUrlLIst:[],
    SelectedComponentUrl:'',
    IsErrorOnComponentUrl:false,
    IsValidComponentUrl:true,
    ApiUrl:'',
    ValidateApiUrl:false,
    RelativeUrl:'',
    AllAutherizationList:[],
    SelectedAutherization:'',
    AllRequestVariables:[],
    SelectedRowForRequestVariableTable:'',
    AllAssertionData:[{id:1,expression:'ResponseCode',function:'ShouldBe',expected:200}],
    SelectedRowForAssertionTable:'',
    AllRequestParamData:[],
    SelectedRowFromRequestParamTable:'',
    AllHttpHeaderData:[],
    SelectedRowFromRequestHeaderable:'',
    AllRequestBody:{},
    IsDynamicDataButtonDisable:true,
    DependentComponentName:'',
    ValidateDependentComponent:false,
    DependentTestId:'',
    ValidateDependentTestId:false,
    ApiVariableData:[],
    ApiResponseData:{},
    DependentResponseKeyData:[],
    SelectedRowDependentResponseKeyTable:'',
    DependentApiDataTable:[],
    SelectedRowFromDependentApiTable:'',
    DependendtComponentList:[],
    DependentTestIdList:[],
    SelectedRowFromDynamicDataTable:-1,
    AllTestIdWithName:[],
    ResponseAssertionData:[],
    TestingType:'Integration Testing'
};